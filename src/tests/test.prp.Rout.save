> # test.prp.R
> 
> library(rpart.plot)
Loading required package: rpart
Warning message:
package 'rpart' was built under R version 2.12.1 
> library(earth)
Loading required package: leaps
Loading required package: plotrix
Warning messages:
1: package 'earth' was built under R version 2.12.1 
2: package 'plotrix' was built under R version 2.12.1 
> data(ptitanic)
> data(ozone1)
> ititanic <- ptitanic
> ititanic$survived <- as.integer(ititanic$survived == "survived")
> 
> if(!interactive())
+     postscript(paper="letter")
> 
> example(rpart.plot)

rprt.p> data(ptitanic)

rprt.p> tree <- rpart(survived ~ ., data=ptitanic, cp=.02)

rprt.p>                          # cp=.02 because want small tree for demo
rprt.p> 
rprt.p> old.par <- par(mfrow=c(2,2))

rprt.p>                          # put 4 figures on one page
rprt.p> 
rprt.p> rpart.plot(tree, main="default rpart.plot\n(type = 0, extra = 0)")

rprt.p> prp(tree, main="type = 4,  extra = 6", type=4, extra=6, faclen=0)

rprt.p>                          # faclen=0 to print full factor names
rprt.p> 
rprt.p> rpart.plot(tree, main="extra = 106,  under = TRUE", extra=106, under=TRUE, faclen=0)

rprt.p> # the old way for comparison
rprt.p> plot(tree, uniform=TRUE, compress=TRUE, branch=.2)

rprt.p> text(tree, use.n=TRUE, cex=.6, xpd=NA) # cex is a guess, depends on your window size

rprt.p> title("rpart.plot for comparison", cex=.6)

rprt.p> par(old.par)
> example(prp)

prp> data(ptitanic)

prp> tree <- rpart(survived ~ ., data=ptitanic, cp=.02)

prp>                          # cp=.02 because want small tree for demo
prp> 
prp> old.par <- par(mfrow=c(2,2))

prp>                          # put 4 figures on one page
prp> 
prp> prp(tree, main="default prp\n(type = 0, extra = 0)")

prp> prp(tree, main="type = 4,  extra = 6", type=4, extra=6, faclen=0)

prp>                          # faclen=0 to print full factor names
prp> 
prp> cols <- ifelse(tree$frame$yval == 1, "darkred", "green4")

prp>                          # green if survived
prp> 
prp> prp(tree, main="assorted arguments",
prp+     extra=106,           # display prob of survival and percent of obs
prp+     nn=TRUE,             # display the node numbers
prp+     fallen.leaves=TRUE,  # put the leaves on the bottom of the page
prp+     branch=.5,           # change angle of branch lines
prp+     faclen=0,            # do not abbreviate factor levels
prp+     trace=1,             # print the automatically calculated cex
prp+     shadow.col="gray",   # shadows under the leaves
prp+     branch.lty=3,        # draw branches using dotted lines
prp+     split.cex=1.2,       # make the split text larger than the node text
prp+     split.prefix="is ",  # put "is " before split text
prp+     split.suffix="?",    # put "?" after split text
prp+     col=cols, border.col=cols,   # green if survived
prp+     split.box.col="lightgray",   # lightgray split boxes (default is white)
prp+     split.border.col="darkgray", # darkgray border on split boxes
prp+     split.round=.5)              # round the split box corners a tad
cex 1   xlim c(0, 1)   ylim c(0, 1)

prp> # the old way for comparison
prp> plot(tree, uniform=TRUE, compress=TRUE, branch=.2)

prp> text(tree, use.n=TRUE, cex=.6, xpd=NA) # cex is a guess, depends on your window size

prp> title("plot.rpart for comparison", cex=.6)

prp> par(old.par)
> print(citation("rpart.plot"))

To cite package 'rpart.plot' in publications use:

  Stephen Milborrow (2011). rpart.plot: Plot rpart models.  An enhanced
  version of plot.rpart.. R package version 1.0-0.
  http://www.milbo.users.sonic.net

A BibTeX entry for LaTeX users is

  @Manual{,
    title = {rpart.plot: Plot rpart models.  An enhanced version of plot.rpart.},
    author = {Stephen Milborrow},
    year = {2011},
    note = {R package version 1.0-0},
    url = {http://www.milbo.users.sonic.net},
  }

> 
> # test format0 and formatf
> 
> x <- c(1234567890, 1234567, 123456, 12345, 1234, 123, 12.34, 12, 1.67, 1.2345,
+        0.12345, 0.012345, 0.0012345, 0.00012345, 0.00000012345, 0,
+        -1234567890, -12.34, -1.2345, -0.12345, -0.00000012345,
+        NA, Inf, -Inf)
> 
> options(digits=7)
> 
> cat("\n--- format0 ---\n")

--- format0 ---
> s4  <- rpart.plot:::format0(x, digits=4)
> s2  <- rpart.plot:::format0(x, digits=2)
> s1  <- rpart.plot:::format0(x, digits=1)
> s0  <- rpart.plot:::format0(x, digits=0)
> tab <- data.frame("digits=4"=s4, "digits=2"=s2, "digits=1"=s1, "digits=0"=s0, check.names=F)
> row.names(tab) <- format(x, digits=15)
> print(tab)
                 digits=4 digits=2 digits=1    digits=0
 1.23456789e+09   1.235e9    1.2e9      1e9  1234567890
 1.23456700e+06   1234567  1234567      1e6     1234567
 1.23456000e+05    123456   123456      1e5      123456
 1.23450000e+04     12345    12345    12345       12345
 1.23400000e+03      1234     1234     1234        1234
 1.23000000e+02       123      123      123         123
 1.23400000e+01     12.34       12       12       12.34
 1.20000000e+01        12       12       12          12
 1.67000000e+00      1.67      1.7        2        1.67
 1.23450000e+00     1.234      1.2        1      1.2345
 1.23450000e-01    0.1235     0.12      0.1     0.12345
 1.23450000e-02   0.01235    0.012     0.01    0.012345
 1.23450000e-03  0.001234   0.0012    0.001   0.0012345
 1.23450000e-04 0.0001234  0.00012     1e-4  0.00012345
 1.23450000e-07  1.235e-7   1.2e-7     1e-7   1.2345e-7
 0.00000000e+00         0        0        0           0
-1.23456789e+09  -1.235e9   -1.2e9     -1e9 -1234567890
-1.23400000e+01    -12.34      -12      -12      -12.34
-1.23450000e+00    -1.234     -1.2       -1     -1.2345
-1.23450000e-01   -0.1235    -0.12     -0.1    -0.12345
-1.23450000e-07 -1.235e-7  -1.2e-7    -1e-7  -1.2345e-7
             NA        NA       NA       NA          NA
            Inf       Inf      Inf      Inf         Inf
           -Inf      -Inf     -Inf     -Inf        -Inf
> 
> cat("\n--- formatf ---\n")

--- formatf ---
> s4  <- rpart.plot:::formatf(x, digits=4)
> s2  <- rpart.plot:::formatf(x, digits=2)
> s1  <- rpart.plot:::formatf(x, digits=1)
> s0  <- rpart.plot:::formatf(x, digits=0)
> sm1 <- rpart.plot:::formatf(x, digits=-1)
> sm2 <- rpart.plot:::formatf(x, digits=-2)
> tab <- data.frame("digits=4"=s4, "digits=2"=s2, "digits=1"=s1, "digits=0"=s0,
+                   "digits=-1"=sm1, "digits=-2"=sm2, check.names=F)
> row.names(tab) <- format(x, digits=15)
> print(tab)
                        digits=4       digits=2      digits=1    digits=0
 1.23456789e+09  1234567890.0000  1234567890.00  1234567890.0  1234567890
 1.23456700e+06     1234567.0000     1234567.00     1234567.0     1234567
 1.23456000e+05      123456.0000      123456.00      123456.0      123456
 1.23450000e+04       12345.0000       12345.00       12345.0       12345
 1.23400000e+03        1234.0000        1234.00        1234.0        1234
 1.23000000e+02         123.0000         123.00         123.0         123
 1.23400000e+01          12.3400          12.34          12.3          12
 1.20000000e+01          12.0000          12.00          12.0          12
 1.67000000e+00           1.6700           1.67           1.7           2
 1.23450000e+00           1.2345           1.23           1.2           1
 1.23450000e-01           0.1235           0.12           0.1           0
 1.23450000e-02           0.0123           0.01           0.0           0
 1.23450000e-03           0.0012           0.00           0.0           0
 1.23450000e-04           0.0001           0.00           0.0           0
 1.23450000e-07           0.0000           0.00           0.0           0
 0.00000000e+00           0.0000           0.00           0.0           0
-1.23456789e+09 -1234567890.0000 -1234567890.00 -1234567890.0 -1234567890
-1.23400000e+01         -12.3400         -12.34         -12.3         -12
-1.23450000e+00          -1.2345          -1.23          -1.2          -1
-1.23450000e-01          -0.1235          -0.12          -0.1          -0
-1.23450000e-07          -0.0000          -0.00          -0.0          -0
             NA               NA             NA            NA          NA
            Inf              Inf            Inf           Inf         Inf
           -Inf             -Inf           -Inf          -Inf        -Inf
                  digits=-1   digits=-2
 1.23456789e+09  1234567890  1234567890
 1.23456700e+06     1234567     1234567
 1.23456000e+05      123456      123456
 1.23450000e+04       12345       12345
 1.23400000e+03        1234        1234
 1.23000000e+02         123         123
 1.23400000e+01          12          12
 1.20000000e+01          12          12
 1.67000000e+00           2           2
 1.23450000e+00           1           1
 1.23450000e-01           0           0
 1.23450000e-02           0           0
 1.23450000e-03           0           0
 1.23450000e-04           0           0
 1.23450000e-07           0           0
 0.00000000e+00           0           0
-1.23456789e+09 -1234567890 -1234567890
-1.23400000e+01         -12         -12
-1.23450000e+00          -1          -1
-1.23450000e-01          -0          -0
-1.23450000e-07          -0          -0
             NA          NA          NA
            Inf         Inf         Inf
           -Inf        -Inf        -Inf
> 
> cat("\n--- formatf strip.leading.zeros ---\n")

--- formatf strip.leading.zeros ---
> s4  <- rpart.plot:::formatf(x, digits=4, strip.leading.zeros=TRUE)
> s2  <- rpart.plot:::formatf(x, digits=2, strip.leading.zeros=TRUE)
> s1  <- rpart.plot:::formatf(x, digits=1, strip.leading.zeros=TRUE)
> s0  <- rpart.plot:::formatf(x, digits=0, strip.leading.zeros=TRUE)
> sm1 <- rpart.plot:::formatf(x, digits=-1, strip.leading.zeros=TRUE)
> sm2 <- rpart.plot:::formatf(x, digits=-2, strip.leading.zeros=TRUE)
> tab <- data.frame("digits=4"=s4, "digits=2"=s2, "digits=1"=s1, "digits=0"=s0,
+                   "digits=-1"=sm1, "digits=-2"=sm2, check.names=F)
> row.names(tab) <- format(x, digits=15)
> print(tab)
                        digits=4       digits=2      digits=1    digits=0
 1.23456789e+09  1234567890.0000  1234567890.00  1234567890.0  1234567890
 1.23456700e+06     1234567.0000     1234567.00     1234567.0     1234567
 1.23456000e+05      123456.0000      123456.00      123456.0      123456
 1.23450000e+04       12345.0000       12345.00       12345.0       12345
 1.23400000e+03        1234.0000        1234.00        1234.0        1234
 1.23000000e+02         123.0000         123.00         123.0         123
 1.23400000e+01          12.3400          12.34          12.3          12
 1.20000000e+01          12.0000          12.00          12.0          12
 1.67000000e+00           1.6700           1.67           1.7           2
 1.23450000e+00           1.2345           1.23           1.2           1
 1.23450000e-01            .1235            .12            .1           0
 1.23450000e-02            .0123            .01            .0           0
 1.23450000e-03            .0012            .00            .0           0
 1.23450000e-04            .0001            .00            .0           0
 1.23450000e-07            .0000            .00            .0           0
 0.00000000e+00            .0000            .00            .0           0
-1.23456789e+09 -1234567890.0000 -1234567890.00 -1234567890.0 -1234567890
-1.23400000e+01         -12.3400         -12.34         -12.3         -12
-1.23450000e+00          -1.2345          -1.23          -1.2          -1
-1.23450000e-01          -0.1235          -0.12          -0.1          -0
-1.23450000e-07          -0.0000          -0.00          -0.0          -0
             NA               NA             NA            NA          NA
            Inf              Inf            Inf           Inf         Inf
           -Inf             -Inf           -Inf          -Inf        -Inf
                  digits=-1   digits=-2
 1.23456789e+09  1234567890  1234567890
 1.23456700e+06     1234567     1234567
 1.23456000e+05      123456      123456
 1.23450000e+04       12345       12345
 1.23400000e+03        1234        1234
 1.23000000e+02         123         123
 1.23400000e+01          12          12
 1.20000000e+01          12          12
 1.67000000e+00           2           2
 1.23450000e+00           1           1
 1.23450000e-01           0           0
 1.23450000e-02           0           0
 1.23450000e-03           0           0
 1.23450000e-04           0           0
 1.23450000e-07           0           0
 0.00000000e+00           0           0
-1.23456789e+09 -1234567890 -1234567890
-1.23400000e+01         -12         -12
-1.23450000e+00          -1          -1
-1.23450000e-01          -0          -0
-1.23450000e-07          -0          -0
             NA          NA          NA
            Inf         Inf         Inf
           -Inf        -Inf        -Inf
> 
> # examples from the vignette TODO update
> 
> fit <- rpart(survived~., data=ititanic)
> cols <- ifelse(fit$frame$yval > .5, "palegreen", "pink")
> par(mfrow=c(2,2))
> prp(fit, box.col=cols, main="Page 3", prefix="probability\n", trace=1)
cex 1   xlim c(0, 1)   ylim c(-0.05, 1.05)
> 
> fit <- rpart(survived~., data=ititanic)
> cp <- sort(unique(fit$frame$complexity))[4:5] # just do 2, for a quicker test
> for(i in 1:length(cp)) {
+     col <- ifelse(fit$frame$complexity >= cp[i], 1, "gray")
+     lwd <- ifelse(fit$frame$complexity >= cp[i], 2, 1)
+     prp(fit, type=1, col=col, branch.col=col, lwd=lwd,
+            sub=sprintf("movie %g", i), col.s=2, trace=1)
+ }
cex 1   xlim c(0, 1)   ylim c(0, 1)
cex 1   xlim c(0, 1)   ylim c(0, 1)
> 
> # return the given node and all its ancestors (a vector of node numbers)
> path.to.root <- function(node, ancestors=NULL)
+ {
+     if(node == 1)   # root?
+         c(1, ancestors)
+     else            # recurse, %/% 2 gives the parent of node
+         c(node, path.to.root(node %/% 2, ancestors))
+ }
> fit.oz <- rpart(O3~., data=ozone1)
> node <- 22 # 22 is our chosen node, arbitrary for this example
> path <- path.to.root(node)
> nodes <- as.numeric(row.names(fit.oz$frame))
> cols <- ifelse(nodes %in% path, 1, "slategray4")
> lwds <- ifelse(nodes %in% path, 2, 1)
> lty  <- ifelse(nodes %in% path, 1, 2)
> prp(fit.oz, type=4, clip.right.labs=F, nn=TRUE, trace=3, # some niceties
+    main=paste("Path to node", node), col.m=3, lwd=lwds, digits=4,
+    col=cols, branch.col=cols, split.col=cols, nn.col=cols)
Initial scale 0.849
Shifter: cex improvement 1 best.shift.amount 0 best.split.yshift.amount 0 (will not be used)
cex 0.849   xlim c(0, 1)   ylim c(0, 1)
> 
> my.labs <- function(x, labs, digits, varlen)
+ {
+     sprintf("ozone %.3g\ndev %.1f", x$frame$yval, x$frame$dev)
+ }
> data(ozone1)
> fit <- rpart(O3~., data=ozone1)
> par(mfrow=c(2,2))
> prp(fit, node.fun=my.labs, main="Page 4: my.labs", trace=1)
cex 0.75   xlim c(0, 1)   ylim c(-0.1, 1.1)
> 
> my.labs2 <- function(x, labs, digits, varlen)
+ {
+     sprintf("%s\n%.2g",
+             ifelse(x$frame$yval > .5, "survived", "died"),
+             x$frame$yval)
+ }
> fit2 <- rpart(survived~., data=ititanic)
> prp(fit2, node.fun=my.labs2, main="my.labs2", trace=1)
cex 1   xlim c(0, 1)   ylim c(-0.05, 1.05)
> 
> my.labs3 <- function(x, labs, digits, varlen) # use passed in labs
+ {
+     sprintf("%s\n\ndev %.1f", labs, x$frame$dev)
+ }
> prp(fit2, node.fun=my.labs3, main="my.labs3\nextra=100", trace=1, extra=100, under=T)
cex 1   xlim c(0, 1)   ylim c(0, 1)
> 
> fit.user <- rpart(survived~., data=ptitanic, cp=.02)
> fit.user$method <- "user"
> fit.user$functions$text <- function (yval, dev, wt, ylevel, digits, n, use.n)
+ {
+     nclass <- (ncol(yval) - 1L)/2
+     group <- yval[, 1L]
+     counts <- yval[, 1L + (1L:nclass)]
+     if (!is.null(ylevel))
+         group <- ylevel[group]
+     temp1 <- format(counts)
+     if (nclass > 1)
+         temp1 <- apply(matrix(temp1, ncol = nclass), 1, paste, collapse = "/")
+     cat("use.n=", use.n, "\n")
+     if (use.n)
+         out <- paste(group, "!\n", temp1, sep = "")
+     else
+         out <- format(group)
+     return(out)
+ }
> prp(fit.user, node.fun=my.labs3, main="method=user\nmy.labs3 extra=100", trace=1, extra=100, under=T, prefix="result: ")
use.n= 100 
cex 1   xlim c(0, 1)   ylim c(0, 1)
> 
> a20 <- rpart(survived~., data=ptitanic, control=list(cp=.02))
> par(mfrow=c(3,3))
> 
> boxes.include.gap <- FALSE
> 
> prp(a20, type=4,
+     main="Page 5: box positioning, type=4\n(1) extra=0\nprefix=0 suffix=0 split.suffix=0\nsplit.cex=1\n",
+     cex.main=.9,
+     under=F,
+     extra=0,
+     split.cex=1,
+     faclen=0, trace=1,
+     boxes.include.gap=boxes.include.gap)
cex 0.931   xlim c(0, 1)   ylim c(0, 1)
> 
> prp(a20, type=4,
+     main="(2) extra=1\nprefix=0 suffix=0 split.suffix=0\nsplit.cex=1\n",
+     cex.main=.9,
+     under=F,
+     extra=1,
+     split.cex=1,
+     faclen=1, trace=1,
+     branch=1,
+     boxes.include.gap=boxes.include.gap)
cex 0.688   xlim c(0, 1)   ylim c(0, 1)
> 
> prp(a20, type=4,
+     main="(3) extra=1\nprefix=1 suffix=0 split.suffix=0\nsplit.cex=1\n",
+     cex.main=.9,
+     under=F,
+     extra=1,
+     prefix="prefix ",
+     suffix="",
+     split.suffix="",
+     split.cex=1,
+     faclen=0, trace=1,
+     split.border.col=1,
+     boxes.include.gap=boxes.include.gap)
cex 0.688   xlim c(0, 1)   ylim c(0, 1)
> 
> prp(a20, type=4,
+     main="(4) extra=4\nprefix=1 suffix=1 split.suffix=1\nsplit.cex=1\n",
+     cex.main=.9,
+     under=F,
+     extra=4,
+     prefix="prefix ",
+     suffix="\nsuffix",
+     split.suffix="\nsplit.suffix",
+     split.cex=1,
+     faclen=0, trace=1,
+     boxes.include.gap=boxes.include.gap)
cex 0.438   xlim c(0, 1)   ylim c(-0.1, 1.1)
> 
> prp(a20, type=4,
+     main="(5) extra=5\nprefix=0 suffix=0 split.suffix=0\nsplit.cex=1.4\n",
+     cex.main=.9,
+     under=F,
+     extra=5,
+     split.cex=1.4,
+     faclen=0, trace=1,
+     split.border.col=1,
+     boxes.include.gap=boxes.include.gap)
cex 0.762   xlim c(0, 1)   ylim c(0, 1)
> 
> prp(a20, type=4,
+     main="(6) extra=101\nprefix=0 suffix=0 split.suffix=0\nsplit.cex=.7\n",
+     cex.main=.9,
+     under=F,
+     extra=101,
+     split.cex=.7,
+     faclen=0, trace=1,
+     branch=1,
+     boxes.include.gap=boxes.include.gap)
cex 0.65   xlim c(0, 1)   ylim c(0, 1)
> 
> prp(a20, type=4,
+     main="(7) extra=1\nprefix=1 suffix=1 split.suffix=1\nsplit.cex=1.4\n",
+     cex.main=.9,
+     under=F,
+     extra=1,
+     prefix="prefix ",
+     suffix="\nsuffix",
+     split.suffix="\nsplit.suffix",
+     split.cex=1.4,
+     faclen=1, trace=1,
+     split.border.col=1,
+     boxes.include.gap=boxes.include.gap)
cex 0.4   xlim c(0, 1)   ylim c(0, 1)
> 
> prp(a20, type=4,
+     main="(8) extra=0\nprefix=1 suffix=1 split.suffix=1\nsplit.cex=.7\n",
+     cex.main=.9,
+     under=F,
+     extra=0,
+     prefix="prefix ",
+     suffix="\nsuffix",
+     split.suffix="\nsplit.suffix",
+     split.cex=.7,
+     faclen=0, trace=1,
+     boxes.include.gap=boxes.include.gap)
cex 0.625   xlim c(0, 1)   ylim c(-0.05, 1.05)
> 
> # TODO split.yshift indexing is confusing
> prp(a20, type=4, trace=2, nn=T, split.border.col=1,
+     main="(9) manual yshift and split.yshift\n",
+     prefix=c("up ", "", "up ", "", "", "", ""),
+     yshift=c(2, 0, 2, 0, 0, 0, 0),
+     branch=1,
+     split.prefix=c("", "", "down ", "", "", "", ""),
+     split.yshift=c(0, -3, 0, 0, 0, 0, 0))
Initial scale 0.688
Shifter: cex improvement 1 best.shift.amount 0 best.split.yshift.amount 0 (will not be used)
cex 0.688   xlim c(0, 1)   ylim c(0, 1)
> 
> 
> a21 <- rpart(survived~., data=ptitanic, control=list(cp=.02))
> par(mfrow=c(3,3))
> 
> prp(a21, type=1,
+     main="Page 6: type=1\n(1) extra=0\nprefix=0 suffix=0 split.suffix=0\nsplit.cex=1\n",
+     cex.main=.9,
+     under=F,
+     extra=0,
+     split.cex=1,
+     faclen=0, trace=1,
+     boxes.include.gap=boxes.include.gap)
cex 1   xlim c(0, 1)   ylim c(0, 1)
> 
> prp(a21, type=1,
+     main="(2) extra=1\nprefix=0 suffix=0 split.suffix=0\nsplit.cex=1\n",
+     cex.main=.9,
+     under=F,
+     extra=1,
+     split.cex=1,
+     faclen=1, trace=1,
+     branch=1,
+     boxes.include.gap=boxes.include.gap)
cex 1   xlim c(0, 1)   ylim c(0, 1)
> 
> prp(a21, type=1,
+     main="(3) extra=1\nprefix=1 suffix=0 split.suffix=0\nsplit.cex=1\n",
+     cex.main=.9,
+     under=F,
+     extra=1,
+     prefix="prefix ",
+     suffix="",
+     split.suffix="",
+     split.cex=1,
+     faclen=0, trace=1,
+     boxes.include.gap=boxes.include.gap)
cex 1   xlim c(0, 1)   ylim c(0, 1)
> 
> prp(a21, type=1,
+     main="(4) extra=1\nprefix=1 suffix=1 split.suffix=1\nsplit.cex=1\n",
+     cex.main=.9,
+     under=F,
+     extra=1,
+     prefix="prefix ",
+     suffix="\nsuffix",
+     split.suffix="\nsplit.suffix",
+     split.cex=1,
+     faclen=1, trace=1,
+     boxes.include.gap=boxes.include.gap)
cex 0.931   xlim c(0, 1)   ylim c(0, 1)
> 
> prp(a21, type=1,
+     main="(5) extra=0\nprefix=0 suffix=0 split.suffix=0\nsplit.cex=1.4\n",
+     cex.main=.9,
+     under=F,
+     extra=0,
+     split.cex=1.4,
+     faclen=0, trace=1,
+     branch=1,
+     boxes.include.gap=boxes.include.gap)
cex 1   xlim c(0, 1)   ylim c(0, 1)
> 
> prp(a21, type=1,
+     main="(6) extra=1\nprefix=0 suffix=0 split.suffix=0\nsplit.cex=.7\n",
+     cex.main=.9,
+     under=F,
+     extra=1,
+     split.cex=.7,
+     faclen=1, trace=1,
+     split.border.col=1,
+     boxes.include.gap=boxes.include.gap)
cex 1   xlim c(0, 1)   ylim c(0, 1)
> 
> prp(a21, type=1,
+     main="(7) extra=1\nprefix=1 suffix=1 split.suffix=1\nsplit.cex=1.4\n",
+     cex.main=.9,
+     under=F,
+     extra=1,
+     prefix="prefix ",
+     suffix="\nsuffix",
+     split.suffix="\nsplit.suffix",
+     split.cex=1.4,
+     faclen=0, trace=1,
+     branch=1,
+     split.border.col=1,
+     boxes.include.gap=boxes.include.gap)
cex 0.688   xlim c(0, 1)   ylim c(0, 1)
> 
> prp(a21, type=1,
+     main="(8) extra=0\nprefix=1 suffix=1 split.suffix=1\nsplit.cex=.7\n",
+     cex.main=.9,
+     under=F,
+     extra=0,
+     prefix="prefix ",
+     suffix="\nsuffix",
+     split.suffix="\nsplit.suffix",
+     split.cex=.7,
+     faclen=1, trace=1,
+     split.border.col=1,
+     boxes.include.gap=boxes.include.gap)
cex 1   xlim c(0, 1)   ylim c(0, 1)
> 
> prp(a21, type=1, trace=2, nn=0, ni=0,
+     main="(9) manual yshift and split.yshift\n",
+     split.border.col=1,
+     cex.main=.9,
+     prefix=c("up\n", "", "up\n", "up\n", "", "", ""),
+     yshift=c(3, 0, 3, 3, 0, 0, 0),
+     split.prefix=c("", "", "down\n", "", "", "", ""),
+     split.yshift=c(0, -1, 0, 0, 0, 0, 0))
Initial scale 1.33
Shifter: cex improvement 1 best.shift.amount 0 best.split.yshift.amount 0 (will not be used)
Clipped scale 1.33 to max.auto.cex 1
cex 1   xlim c(0, 1)   ylim c(0, 1)
> 
> 
> par(mfrow=c(3,3))
> a8 <- rpart(survived~., data=ptitanic, control=list(cp=.02))
> prp(a8, type=2, main="Page 7: type=2")
> prp(a8, type=2, extra=4, main="extra=4")
> prp(a8, type=2, extra=104, main="extra=104")
> 
> prp(a8, type=2, extra=0,   under=T, main="extra=0,   under=T")
> prp(a8, type=2, extra=4,   under=T, main="extra=4,   under=T")
> prp(a8, type=2, extra=104, under=T, main="extra=104, under=T")
> 
> prp(a8, type=2, extra=104, under=T, under.cex=.6, main="extra=104, under=T\nunder.cex=.6")
> prp(a8, type=2, extra=104, under=T, under.cex=1, main="extra=104, under=T\nunder.cex=1.2")
> prp(a8, type=2, extra=104, under=T, split.border.col=1, border.col=0, main="extra=104, under=T\nsplit.border=1, border=0")
> 
> par(mfrow=c(2,2))
> fit3 <- rpart(survived~., data=ititanic, control=list(cp=.002))
> prp(fit3, trace=3, nn=0, faclen=0, prefix="prob ", main="Page 8: ycompress")
Initial scale 0.65
    Node shifter: cex improvement 1     shift.amount 1.5  <new best
    Node shifter: cex improvement 0.538 shift.amount 2.0  
Shifter: cex improvement 1 best.shift.amount 1.5 best.split.yshift.amount 0 (will not be used)
cex 0.65   xlim c(0, 1)   ylim c(0, 1)
> prp(fit3, extra=100, trace=3, nn=TRUE, faclen=0, fallen.leaves=TRUE, main="fallen leaves")
Initial scale 0.45
    Node shifter: cex improvement 0.778 shift.amount 1.5  
    Node shifter: cex improvement 0.556 shift.amount 2.0  
Shifter: cex improvement 1 best.shift.amount 0 best.split.yshift.amount 0 (will not be used)
cex 0.45   xlim c(0, 1)   ylim c(0, 1)
> prp(fit3, type=4, trace=3, nn=TRUE, clip.right.labs=0, split.border.col=1, main="type=4 ")
Initial scale 0.45
Shifter: cex improvement 1 best.shift.amount 0 best.split.yshift.amount 0 (will not be used)
cex 0.45   xlim c(0, 1)   ylim c(0, 1)
> # use prefix below to force shifting of fallen leaves to test shifter
> prp(fit3, type=4, branch=.5, extra=1, under=TRUE, trace=3, nn=FALSE, fallen.leaves=1, prefix="probability ", main="type=4, fallen leaves")
Initial scale 0.25
    Node shifter: cex improvement 1.35  shift.amount 1.5  <new best
    Node shifter: cex improvement 1.4   shift.amount 2.0  <new best
Shifter: cex improvement 1.4 best.shift.amount 2 best.split.yshift.amount 0 (will be used)
ycompress increased cex by 1.40
cex 0.35   xlim c(0, 1)   ylim c(0, 1)
> 
> par(mfrow=c(2,2))
> fit7 <- rpart(survived ~ ., data=ptitanic, cp=.01)
> # this was wrong until I added check that a shift doesn't move nodes above the nodes for the level above
> prp(fit7, extra=1, branch=1, trace=3, nn=1, main="Page 9: more ycompress")
Initial scale 1.03
Shifter: cex improvement 1 best.shift.amount 0 best.split.yshift.amount 0 (will not be used)
Clipped scale 1.03 to max.auto.cex 1
cex 1   xlim c(0, 1)   ylim c(0, 1)
> 
> par(mfrow=c(2,2))
> prp(fit2, prefix=ifelse(fit2$frame$yval > .5, "survived\n", "died\n"), main="Page 10: miscellaneous 1", trace=1)
cex 1   xlim c(0, 1)   ylim c(-0.05, 1.05)
> ptitanic1 <- ptitanic
> ptitanic1$sibsp1234567890 <- ptitanic1$sibsp
> ptitanic1$sibsp <- NULL
> fit2 <- rpart(survived~., data=ptitanic1)
> prp(fit2, faclen=0, digits=4, trace=1)
cex 1   xlim c(0, 1)   ylim c(0, 1)
> 
> # test small tree, also tests xcompact and ycompact
> fit.small <- rpart(survived~., data=ptitanic1, , control=list(cp=.1))
> prp(fit.small, extra=100, faclen=0, main="small tree", trace=1)
cex 1   xlim c(-0.65, 1.65)   ylim c(-1.05, 2.05)
> 
> par(mfrow=c(2,2))
> fit4 <- rpart(survived~., data=ititanic, method="class", control=list(cp=.02))
> prp(fit4, trace=2, cex=.8, tweak=1.1, main="Page 11: miscellaneous 2, tweak",
+        xflip=TRUE, yflip=TRUE, type=1, extra=100,  yesno=FALSE)
Initial scale 1.33
Shifter: cex improvement 1 best.shift.amount 0 best.split.yshift.amount 0 (will not be used)
cex 0.8 (before applying tweak 1.1)   xlim c(0, 1)   ylim c(0, 1)
Warning message:
cex and tweak both specified, applying both 
> # TODO wanna include family below, but postscript giving me grief
> prp(fit4, main="left=FALSE, fonts", left=FALSE, font=c(1,2,3), split.cex=c(1, 1.2), branch=.5, trace=1)
cex 1   xlim c(-0.65, 1.65)   ylim c(-0.1, 1.1)
> prp(fit4, main="uniform=FALSE", uniform=FALSE, trace=1)
cex 1   xlim c(0, 1)   ylim c(0, 1)
> data(ozone1)
> fit.oz1 <- rpart(O3~., data=ozone1)
> obj <- prp(fit.oz1, main="digits=7", digits=7, trace=1)
cex 0.849   xlim c(0, 1)   ylim c(-0.15, 1.15)
> cat("obj returned by prp:\n")
obj returned by prp:
> print(obj)
$obj
n= 330 

node), split, n, deviance, yval
      * denotes terminal node

 1) root 330 21115.4100 11.775760  
   2) temp< 67.5 214  4114.3040  7.425234  
     4) ibh>=3573.5 108   689.6296  5.148148 *
     5) ibh< 3573.5 106  2294.1230  9.745283  
      10) dpg< -9.5 35   362.6857  6.457143 *
      11) dpg>=-9.5 71  1366.4790 11.366200  
        22) ibt< 159 40   287.9000  9.050000 *
        23) ibt>=159 31   587.0968 14.354840 *
   3) temp>=67.5 116  5478.4400 19.801720  
     6) ibt< 226.5 55  1276.8360 15.945450  
      12) humidity< 59.5 10   167.6000 10.800000 *
      13) humidity>=59.5 45   785.6444 17.088890 *
     7) ibt>=226.5 61  2646.2620 23.278690  
      14) doy>=306.5 8   398.0000 16.000000 *
      15) doy< 306.5 53  1760.4530 24.377360  
        30) vis>=55 36  1149.8890 22.944440 *
        31) vis< 55 17   380.1176 27.411760 *

$snipped.nodes
NULL

$xlim
[1] 0 1

$ylim
[1] -0.15  1.15

$x
 [1] 0.40095844 0.13382523 0.05640542 0.21124504 0.13452271 0.28796737
 [7] 0.21821980 0.35771495 0.66809166 0.51115961 0.44141204 0.58090719
[13] 0.79712467 0.72040234 0.87384700 0.80409943 0.94359458

$y
 [1] 0.95495420 0.71943321 0.48391221 0.48391221 0.24839122 0.24839122
 [7] 0.01287023 0.01287023 0.71943321 0.48391221 0.24839122 0.24839122
[13] 0.48391221 0.24839122 0.24839122 0.01287023 0.01287023

$branch.x
       [,1]      [,2]       [,3]      [,4]      [,5]      [,6]      [,7]
x 0.4009584 0.1338252 0.05640542 0.2112450 0.1345227 0.2879674 0.2182198
         NA 0.3475318 0.11834127 0.1493092 0.1959006 0.2265895 0.2740179
         NA 0.4009584 0.13382523 0.1338252 0.2112450 0.2112450 0.2879674
       [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14]
x 0.3577149 0.6680917 0.5111596 0.4414120 0.5809072 0.7971247 0.7204023
  0.3019169 0.4543851 0.6255456 0.4972101 0.5251091 0.6827386 0.7817802
  0.2879674 0.4009584 0.6680917 0.5111596 0.5111596 0.6680917 0.7971247
      [,15]     [,16]     [,17]
x 0.8738470 0.8040994 0.9435946
  0.8124691 0.8598975 0.8877965
  0.7971247 0.8738470 0.8738470

$branch.y
       [,1]      [,2]      [,3]      [,4]      [,5]      [,6]       [,7]
y 0.9608505 0.7253295 0.5371918 0.4898085 0.3016709 0.2542875 0.06614986
         NA 0.9549542 0.7194332 0.7194332 0.4839122 0.4839122 0.24839122
         NA 0.9549542 0.7194332 0.7194332 0.4839122 0.4839122 0.24839122
        [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14]
y 0.06614986 0.7253295 0.4898085 0.3016709 0.3016709 0.4898085 0.3016709
  0.24839122 0.9549542 0.7194332 0.4839122 0.4839122 0.7194332 0.4839122
  0.24839122 0.9549542 0.7194332 0.4839122 0.4839122 0.7194332 0.4839122
      [,15]      [,16]      [,17]
y 0.2542875 0.06614986 0.06614986
  0.4839122 0.24839122 0.24839122
  0.4839122 0.24839122 0.24839122

$labs
 [1] NA         NA         "5.148148" NA         "6.457143" NA        
 [7] "9.05"     "14.35484" NA         NA         "10.8"     "17.08889"
[13] NA         "16"       NA         "22.94444" "27.41176"

$cex
[1] 0.8492188

$boxes
$boxes$x1
 [1]           NA           NA -0.004631584           NA  0.073485700
 [6]           NA  0.184315771  0.296677940           NA           NA
[11]  0.407508011  0.519870180           NA  0.696673179           NA
[16]  0.743062420  0.882557571

$boxes$y1
 [1]          NA          NA  0.46615234          NA  0.23063134          NA
 [7] -0.00488965 -0.00488965          NA          NA  0.23063134  0.23063134
[13]          NA  0.23063134          NA -0.00488965 -0.00488965

$boxes$x2
 [1]        NA        NA 0.1174424        NA 0.1955597        NA 0.2521238
 [8] 0.4187520        NA        NA 0.4753161 0.6419442        NA 0.7441315
[15]        NA 0.8651364 1.0046316

$boxes$y2
 [1]         NA         NA 0.53719185         NA 0.30167086         NA
 [7] 0.06614986 0.06614986         NA         NA 0.30167086 0.30167086
[13]         NA 0.30167086         NA 0.06614986 0.06614986


$split.labs
[1] ""

$split.cex
[1] 1

$split.box
$split.box$x1
 [1] 0.3307836 0.0538049        NA 0.1475118        NA 0.2354216        NA
 [8]        NA 0.6053710 0.4192930        NA        NA 0.7207400        NA
[15] 0.8189100        NA        NA

$split.box$y1
 [1] 0.9371943 0.7016733        NA 0.4661523        NA 0.2306313        NA
 [8]        NA 0.7016733 0.4661523        NA        NA 0.4661523        NA
[15] 0.2306313        NA        NA

$split.box$x2
 [1] 0.4711333 0.2138456        NA 0.2749783        NA 0.3405131        NA
 [8]        NA 0.7308123 0.6030262        NA        NA 0.8735094        NA
[15] 0.9287840        NA        NA

$split.box$y2
 [1] 1.0082338 0.7727128        NA 0.5371918        NA 0.3016709        NA
 [8]        NA 0.7727128 0.5371918        NA        NA 0.5371918        NA
[15] 0.3016709        NA        NA


> 
> # test extra and faclen etc. on anova model
> a1 <- rpart(survived~., data=ititanic, control=list(cp=.03))
> par(mfrow=c(3, 3))
> plot(a1, unif=TRUE, branch=.3, main="Page 12: anova\nwith extra faclen etc.\n")
> text(a1, fancy=T, fwidth=.35, fheight=0.3, use.n=TRUE, all=T, digits=3, xpd=NA, pretty=0)
> prp(a1, extra=0, faclen=-3, varlen=2,             type=1, main="extra=0", trace=1)
cex 1   xlim c(-0.2, 1.2)   ylim c(-0.1, 1.1)
> prp(a1, extra=1, faclen=1,  varlen=-2,              type=4, main="extra=1", trace=1)
cex 1   xlim c(0, 1)   ylim c(0, 1)
> prp(a1, extra=100, faclen=3,             digits=3,  type=4, clip.right.labs=FALSE, facsep=" or ", main="extra=100", trace=1)
cex 1   xlim c(0, 1)   ylim c(0, 1)
> # plot(1, 1, type="n", axes=FALSE, xlab="", ylab="") # blank
> # test xflip and left (note: left=FALSE cannot be used with type=4)
> prp(a1, main="\n\nxflip",                xflip=TRUE,             extra=101, faclen=0, trace=1)
cex 1   xlim c(0, 1)   ylim c(-0.15, 1.15)
> prp(a1, main="type=4",                                type=4, extra=101, faclen=0, trace=1)
cex 1   xlim c(0, 1)   ylim c(0, 1)
> prp(a1, main="xflip type=4",              xflip=TRUE, type=4, extra=101, faclen=0, trace=1)
cex 1   xlim c(0, 1)   ylim c(0, 1)
> prp(a1, main="xflip type=4 clip=FALSE",   xflip=TRUE, type=4, extra=101, faclen=0, clip=FALSE, trace=1)
cex 1   xlim c(0, 1)   ylim c(0, 1)
> 
> # test extra and faclen etc. on class model
> a2 <- rpart(survived~., data=ptitanic, control=list(cp=.02))
> par(mfrow=c(3, 2))
> plot(a2, unif=TRUE, branch=.3, main="Page 13: class")
> text(a2, use.n=TRUE, all=T, digits=3, xpd=NA, pretty=0)
> prp(a2, extra=0, eq=" eq ", lt=" lt ", ge=" ge ", facsep="|", xsep="/",
+     type=4, main="extra=0", trace=3, split.border.col=1)
Initial scale 0.931
Shifter: cex improvement 1 best.shift.amount 0 best.split.yshift.amount 0 (will not be used)
cex 0.931   xlim c(0, 1)   ylim c(0, 1)
> prp(a2, extra=1, type=1,  xsep=", ", main="extra=1", trace=1)
cex 1   xlim c(0, 1)   ylim c(0, 1)
> prp(a2, extra=100, type=3, clip.right.labs=FALSE, main="extra=100", trace=3, split.border.col=1, ycompress.cex=1)
Initial scale 0.931
Shifter: cex improvement 1 best.shift.amount 0 best.split.yshift.amount 0 (will not be used)
cex 0.931   xlim c(0, 1)   ylim c(0, 1)
> prp(a2, extra=4, type=0, main="extra=4", faclen=0, trace=1, under=TRUE, col=2)
cex 1   xlim c(-0.2, 1.2)   ylim c(0, 1)
> prp(a2, extra=104, type=0, main="extra=104", faclen=0, trace=1)
cex 1   xlim c(0, 1)   ylim c(0, 1)
> 
> old.par <- par(mfrow=c(8,4), mar = c(4, 3, 2, 1), mgp = c(1.5, .5, 0))
> 
> a4 <- rpart(survived~., data=ptitanic, cp=.03)
> plot(a4, unif=T, branch=.3); text(a4, use.n=1, cex=1, xpd=NA, pretty=0); title("Page 14: class extra\n", cex.main=.9)
> prp(a4, type=1, yesno=T, faclen=-1, under=F, extra=0, cex.main=.9, main="extra=0\nunder=F")
> prp(a4, type=1, yesno=T, faclen=-1, under=F, extra=1, cex.main=.9, main="extra=1\nunder=F")
> prp(a4, type=1, yesno=T, faclen=-1, under=F, extra=4, cex.main=.9, main="extra=4\nunder=F")
> prp(a4, type=1, yesno=T, faclen=-1, under=F, extra=5, cex.main=.9, main="extra=5\nunder=F")
> prp(a4, type=1, yesno=T, faclen=-1, under=F, extra=6, cex.main=.9, main="extra=6\nunder=F")
> prp(a4, type=1, yesno=T, faclen=-1, extra=7, under=F, cex.main=.9, main="extra=7\nunder=F")
> prp(a4, type=1, yesno=T, faclen=-1, under=F, extra=8, cex.main=.9, main="extra=8\nunder=F")
> prp(a4, type=1, yesno=T, faclen=-1, under=F, extra=9, cex.main=.9, main="extra=9\nunder=F")
> prp(a4, type=1, yesno=T, faclen=-1, under=F, extra=100, cex.main=.9, main="extra=100\nunder=F")
> prp(a4, type=1, yesno=T, faclen=-1, under=F, extra=101, cex.main=.9, main="extra=101\nunder=F")
> prp(a4, type=1, yesno=T, faclen=-1, under=F, extra=104, cex.main=.9, main="extra=104\nunder=F")
> prp(a4, type=1, yesno=T, faclen=-1, under=F, extra=105, cex.main=.9, main="extra=105\nunder=F")
> prp(a4, type=1, yesno=T, faclen=-1, under=F, extra=106, cex.main=.9, main="extra=106\nunder=F")
> prp(a4, type=1, yesno=T, faclen=-1, under=F, extra=107, cex.main=.9, main="extra=107\nunder=F")
> prp(a4, type=1, yesno=T, faclen=-1, under=F, extra=109, cex.main=.9, main="extra=109\n under=F")
> 
> plot(0, 0, type="n", axes=FALSE, xlab="", ylab="")
> prp(a4, type=1, yesno=T, faclen=-1, under=T, extra=0, cex.main=.9, main="extra=0\nunder=T")
> prp(a4, type=1, yesno=T, faclen=-1, under=T, extra=1, cex.main=.9, main="extra=1\nunder=T")
> prp(a4, type=1, yesno=T, faclen=-1, under=T, extra=4, cex.main=.9, main="extra=4\nunder=T")
> prp(a4, type=1, yesno=T, faclen=-1, under=T, extra=5, cex.main=.9, main="extra=5\nunder=T")
> prp(a4, type=1, yesno=T, faclen=-1, under=T, extra=6, cex.main=.9, main="extra=6\nunder=T")
> prp(a4, type=1, yesno=T, faclen=-1, extra=7, under=T, cex.main=.9, main="extra=7\nunder=T (ignored)")
> prp(a4, type=1, yesno=T, faclen=-1, under=T, extra=8, cex.main=.9, main="extra=8\nunder=T")
> prp(a4, type=1, yesno=T, faclen=-1, under=T, extra=9, cex.main=.9, main="extra=9\nunder=T")
> prp(a4, type=1, yesno=T, faclen=-1, under=T, extra=100, cex.main=.9, main="extra=100\nunder=T")
> prp(a4, type=1, yesno=T, faclen=-1, under=T, extra=101, cex.main=.9, main="extra=101\nunder=T")
> prp(a4, type=1, yesno=T, faclen=-1, under=T, extra=104, cex.main=.9, main="extra=104\nunder=T")
> prp(a4, type=1, yesno=T, faclen=-1, under=T, extra=105, cex.main=.9, main="extra=105\nunder=T")
> prp(a4, type=1, yesno=T, faclen=-1, under=T, extra=106, cex.main=.9, main="extra=106\nunder=T")
> prp(a4, type=1, yesno=T, faclen=-1, under=T, extra=107, cex.main=.9, main="extra=107\nunder=T")
> prp(a4, type=1, yesno=T, faclen=-1, under=T, extra=109, cex.main=.9, main="extra=109\n under=T")
> 
> par(old.par)
> 
> par(mfrow=c(3,3))
> prp(a4, type=1,          extra=2,   main="Page 15: class extra continued\nextra=2 (classification rate)")
> prp(a4, type=1, under=T, extra=3,   main="extra=3 (misclassification rate)\nunder=T")
> prp(a4, type=1,          extra=102, main="extra=102 (classification rate)\n")
> prp(a4, type=1, under=T, extra=103, main="extra=103 (misclassification rate)\nunder=T")
> 
> # poisson
> set.seed(8)
> ozone2 <- ozone1
> ozone2$O3a <- round(runif(330, 1, 10))
> y <- cbind(ozone2$O3, ozone2$O3a)
> a5 <- rpart(y~.-O3-O3a, data=ozone2, control=list(cp=.04))
> par(mfrow=c(2, 3))
> plot(a5, unif=TRUE, branch=.3, main="Page 16: poisson\n"); text(a5, use.n=TRUE, all=T, digits=3, xpd=NA, cex=1.1)
> prp(a5, extra=0, digits=3, type=4, trace=1, main="extra=0\ntype=4")
cex 1   xlim c(-0.2, 1.2)   ylim c(-0.45, 1.45)
> prp(a5, extra=1, type=4, clip=FALSE, under=TRUE, main="extra=1: nbr of events, nbr of obs\ntype=4", trace=1, under.cex=1)
cex 1   xlim c(0, 1)   ylim c(-0.3, 1.3)
> prp(a5, extra=2, trace=1, type=0, under=T, main="extra=2: nbr of events", under.cex=1)
cex 1   xlim c(-0.2, 1.2)   ylim c(-0.65, 1.65)
> prp(a5, extra=102, type=4, under=TRUE, xsep="/", main="extra=102\ntype=4", trace=1, under.cex=1)
cex 1   xlim c(0, 1)   ylim c(-0.3, 1.3)
> 
> # prefix, suffix, etc.
> a7 <- rpart(survived~., data=ptitanic, control=list(cp=.02))
> par(mfrow=c(2, 2))
> # test many parameters, and their vectorization
> prp(a7, main="Page 17: many params, prefix, suffix, etc.", edge=.03,
+     extra=4, under=T, prefix="res:", suffix=" (probs)", split.suffix="\n\nabc", faclen=0, trace=3,
+     nn=1,
+     under.col=c(2,3), under.font=c(3,2), under.ygap=c(.2,-.2), under.cex=c(1.1, .8),
+     adj=c(0,.5), split.adj=c(.5,1), yshift=c(-.5,.5),
+     shadow.col=c(1,2), split.shadow.col=c("pink","blue"),
+     space=c(.8,.6), yspace=c(.5,.1), border.col=c("gray", "green3", "pink"),
+     lty=c(1,2),
+     shadow.offset=c(.4,1,2),
+     split.shadow.offset=c(.4,.4,1),
+     nn.font=c(1,3), nn.adj=c(1,0), nn.col=c(1,2), nn.border.col=c(0,1,2))
Initial scale 1.06
Shifter: cex improvement 1 best.shift.amount 0 best.split.yshift.amount 0 (will not be used)
Clipped scale 1.06 to max.auto.cex 1
cex 1   xlim c(0, 1)   ylim c(0, 1)
> 
> my.split.labs <- function(x, labs, digits, varlen, faclen)
+ {
+     sprintf("my.split.lab\n%s", labs)
+ }
> prp(a7, type=4, extra=4, under=T,
+     faclen=0, trace=3,
+     split.fun=my.split.labs,
+     split.prefix="L[", split.suffix="]L",
+     right.split.prefix="R[", right.split.suffix="]R",
+     round=9, leaf.round=0,
+     ycompress.cex=.8) # force ycompress for testing with type=4
Initial scale 0.849
Shifter: cex improvement 1 best.shift.amount 0 best.split.yshift.amount 0 (will not be used)
cex 0.849   xlim c(0, 1)   ylim c(0, 1)
> 
> prp(a7, type=4, extra=1, under=F, prefix="response:",
+     suffix="\n\n (probs)", split.suffix="\n\nabc", faclen=0, trace=3)
Initial scale 0.738
Shifter: cex improvement 1 best.shift.amount 0 best.split.yshift.amount 0 (will not be used)
cex 0.738   xlim c(0, 1)   ylim c(0, 1)
> par(mfrow=c(1, 1))
> 
> data(iris)
> a.iris <- rpart(Species~., data=iris)
> par(mfrow=c(2, 2))
> old.bg <- par(bg="darkgray")
> prp(a.iris, main="Page 18: gray background",
+     type=4, extra=1, under=TRUE,
+     col=c("orange", "green", "wheat")[a.iris$frame$yval], under.col="red",
+     border.col=c(3,4), nn.col=c(2,3),
+     split.border.col=5,
+     shadow.col="black",
+     split.shadow.col="lightgray",
+     branch.col=c("orange4", "white"),
+     branch.lwd=c(3,2), branch.lty=1:3)
> par(bg=old.bg)
> par(mfrow=c(1, 1))
> 
> par(mfrow=c(2, 3))
> a <- rpart(survived~., data=ptitanic, control=list(cp=.01))
> prp(a, uniform=T, branch=.4, compress=T, extra=104, trace=2, main="Page 19: test mar and xpd args")
Initial scale 0.931
Shifter: cex improvement 1 best.shift.amount 0 best.split.yshift.amount 0 (will not be used)
cex 0.931   xlim c(0, 1)   ylim c(0, 1)
> prp(a, uniform=T, branch=.4, compress=T, extra=104, mar=c(1,2,3,4), trace=2, main="test mar=c(1,2,3,4)")
Initial scale 0.816
Shifter: cex improvement 1 best.shift.amount 0 best.split.yshift.amount 0 (will not be used)
cex 0.816   xlim c(0, 1)   ylim c(0, 1)
> prp(a, uniform=T, branch=.4, compress=T, extra=104, mar=c(5,2,3,4), trace=2, main="test mar=c(5,2,3,4)")
Initial scale 0.816
Shifter: cex improvement 1 best.shift.amount 0 best.split.yshift.amount 0 (will not be used)
cex 0.816   xlim c(0, 1)   ylim c(0, 1)
> prp(a, uniform=T, branch=.4, compress=T, extra=104, xpd=T, trace=2, prefix="123456789", cex=1, main="test xpd=T, par=1")
Initial scale 0.562
    Node shifter: cex improvement 0.778 shift.amount 1.5  
    Node shifter: skipping invalid      shift.amount 2.0 
Shifter: cex improvement 1 best.shift.amount 0 best.split.yshift.amount 0 (will not be used)
cex 1   xlim c(0, 1)   ylim c(0, 1)
> prp(a, uniform=T, branch=.4, compress=T, extra=104, xpd=F, trace=2, prefix="123456789", cex=1, main="test xpd=F, par=1")
Initial scale 0.562
    Node shifter: cex improvement 0.778 shift.amount 1.5  
    Node shifter: skipping invalid      shift.amount 2.0 
Shifter: cex improvement 1 best.shift.amount 0 best.split.yshift.amount 0 (will not be used)
cex 1   xlim c(0, 1)   ylim c(0, 1)
> par(mfrow=c(1, 1))
> 
> # shadows
> 
> a <- rpart(pclass ~ ., data=ptitanic, control=rpart.control(cp=.01))
> par(mfrow=c(2,3))
> prp(a, type=0, faclen=0, extra=1, under=F, shadow.col="darkgray", nn=T, split.shadow.col="darkgray", main="Page 20: shadows")
> prp(a, type=1, faclen=0, extra=1, under=F, shadow.col="darkgray", nn=T, main="type=1")
> prp(a, type=1, faclen=0, extra=2, under=T, shadow.col="darkgray", nn=T, main="type=1")
> prp(a, type=2, faclen=0, extra=3, under=F, shadow.col="darkgray", nn=T, split.shadow.col="darkgray", main="type=2")
> prp(a, type=3, faclen=0, extra=4, under=T, shadow.col="darkgray", nn=T, split.shadow.col="darkgray", main="type=3")
> prp(a, type=4, faclen=0, extra=101, under=T, shadow.col="darkgray", nn=T, split.shadow.col="darkgray", main="type=4")
> par(mfrow=c(1,1))
> 
> # misc.
> 
> # test that do.par correctly restores eveything, also test do.par=FALSE
> a <- rpart(pclass ~ ., data=ptitanic, cp=.005)
> par(mfrow=c(3,3))
> old.par <- par(no.readonly=TRUE)
> prp(a, trace=2, main="Page 21: do.par=default") # trace=2 so can see the grid
Initial scale 1.06
Shifter: cex improvement 1 best.shift.amount 0 best.split.yshift.amount 0 (will not be used)
Clipped scale 1.06 to max.auto.cex 1
cex 1   xlim c(0, 1)   ylim c(0, 1)
>     # set par settings that can legally change to NULL for comparison
>     old.par$usr <- old.par$fig <- old.par$mfg <- old.par$xaxp <- old.par$yaxp <- NULL
>     par <- par(no.readonly=TRUE)
>     par$usr <- par$fig <- par$mfg <- par$xaxp <- par$yaxp <- NULL
>     stopifnot(isTRUE(all.equal(old.par, par)))
> prp(a, trace=2, main="do.par=FALSE", do.par=FALSE)
Initial scale 0.816
Shifter: cex improvement 1 best.shift.amount 0 best.split.yshift.amount 0 (will not be used)
cex 0.816   xlim c(0, 1)   ylim c(0, 1)
>     par <- par(no.readonly=TRUE)
>     par$usr <- par$fig <- par$mfg <- par$xaxp <- par$yaxp <- NULL
>     stopifnot(isTRUE(all.equal(old.par, par)))
> par(mfrow=c(1,1))
> 
> # different branch types
> a <- rpart(pclass ~ ., data=ptitanic, cp=.02)
> par(mfrow=c(2,3))
> prp(a, branch.type=5, main="Page 22: branch.type=5\nwt")
> prp(a, branch.type=1, main="branch.type=1\ndev")
> prp(a, branch.type=2, main="branch.type=2\nsqrt(dev)\nuniform=FALSE", uniform=FALSE)
> prp(a, branch.type=6, fallen.leaves=T, main="branch.type=6\ncomplexity\nfallen.leaves")
> prp(a, branch.type=7, fallen.leaves=T, main="branch.type=7\nabs(yval)\nfallen.leaves")
> prp(a, branch.type=8, main="branch.type=8\nyval - min(yval)")
> 
> par(mfrow=c(2,3))
> # continuous response
> a.age <- rpart(age~., data=ptitanic, cp=.04)
> prp(a.age, branch.type=7, branch.col="pink", main="Page 23: branch.type=7\ncontinuous response")
> 
> # test different types with branch.type
> # prp(a, type=1, branch.type=5, branch.col="slategray3", main="type=1\nbranch.type=5") # already tested
> prp(a, type=2, branch.type=5, branch.col="slategray3", main="type=2\nbranch.type=5\n")
> # prp(a, type=3, branch.type=5, branch.col="slategray3", main="type=1\nbranch.type=5") # not yet supported
> # prp(a, type=4, branch.type=5, branch.col="slategray3", main="type=1\nbranch.type=5") # not yet supported
> prp(a, type=2, branch.type=3, branch=0, branch.col="slategray3", main="type=2\nbranch.type=3\nbranch=0")
> prp(a, type=2, branch.type=4, branch=1, main="type=2\nbranch.type=4\nbranch=1",
+     branch.col=c("slategray","slateblue2","slateblue")[a$frame$yval])
> 
> branch.fun1 <- function(x)
+ {
+     width <- x$frame$wt
+ }
> root <- rpart(survived ~ ., data=ptitanic, cp=.5)
> prp(a, branch.type=branch.fun1, branch.col="slategray3", main="branch.fun1")
> 
> par(mfrow=c(2,3))
> prp(root, branch.type=5, main="Page 24: branch.type=5\nsingle node tree")
> prp(a, branch=0, branch.type=5, branch.tweak=1.5, branch.col="slategray3",
+     branch.fill=2, main="branch.type=5\nbranch args")
> 
> par(mfrow=c(4,4))
> set.seed(1924)
> root <- rpart(survived ~ ., data=ptitanic, cp=.5)
> temp <- prp(root, main="Page 25: single node tree")
> print(temp)
$obj
n= 1309 

node), split, n, loss, yval, (yprob)
      * denotes terminal node

1) root 1309 500 died (0.6180290 0.3819710) *

$snipped.nodes
NULL

$xlim
[1] 0 1

$ylim
[1] 0 1

$x
[1] 0.5

$y
[1] 0.5

$branch.x
  [,1]
x  0.5
    NA
    NA

$branch.y
  [,1]
y  0.5
    NA
    NA

$labs
[1] "died"

$cex
[1] 1

$boxes
$boxes$x1
[1] 0.4308005

$boxes$y1
[1] 0.4675309

$boxes$x2
[1] 0.5691995

$boxes$y2
[1] 0.5974073


$split.labs
[1] ""

$split.cex
[1] 1

$split.box
$split.box$x1
[1] NA

$split.box$y1
[1] NA

$split.box$x2
[1] NA

$split.box$y2
[1] NA


> prp(root, type=1, main="type=1")
> prp(root, type=2, extra=1, main="type=2, extra=1")
> prp(root, type=3, extra=2, under=T, main="type=3, extra=4, under=T")
> prp(root, type=4, extra=3, main="type=4, extra=4",
+     prefix="l[", suffix="]r",
+     split.prefix="L[", split.suffix="]L",
+     right.split.prefix="R[", right.split.suffix="]R",
+     round=9, leaf.round=0)
> prp(root, branch.type=5, main="branch.type=5")
> par(mfrow=c(1,1))
> 
> source("user-manual-figs.R")
cex 1   xlim c(0, 1)   ylim c(0, 1)
cex 0.688   xlim c(0, 1)   ylim c(0, 1)
cex 0.931   xlim c(0, 1)   ylim c(0, 1)
cex 0.931   xlim c(0, 1)   ylim c(0, 1)
cex 1 (before applying tweak 1.2)   xlim c(0, 1)   ylim c(0, 1)
cex 1 (before applying tweak 1.2)   xlim c(-0.65, 1.65)   ylim c(-0.75, 1.75)
[1]  1  2  4  5 10 11  3
[1] 1
[1] 2
[1] FALSE FALSE  TRUE FALSE  TRUE  TRUE  TRUE
[1]  4 10 11  3
[1] FALSE  TRUE  TRUE FALSE  TRUE FALSE FALSE
[1]  0  3  5  4 11 10  2
[1]  2  4  5 10 11
> par(mfrow=c(1,1))
> 
> set.seed(1924)
> # use.prp <- FALSE
> # source("code.in.rpart.report.with.prp.R")
> use.prp <- TRUE
> source("code.in.rpart.report.with.prp.R")
### Section 3
n= 146 

node), split, n, loss, yval, (yprob)
      * denotes terminal node

 1) root 146 54 No (0.6301370 0.3698630)  
   2) grade< 2.5 61  9 No (0.8524590 0.1475410) *
   3) grade>=2.5 85 40 Prog (0.4705882 0.5294118)  
     6) g2< 13.2 35 14 No (0.6000000 0.4000000)  
      12) g2>=11.845 7  1 No (0.8571429 0.1428571) *
      13) g2< 11.845 28 13 No (0.5357143 0.4642857)  
        26) g2< 11.005 21  8 No (0.6190476 0.3809524) *
        27) g2>=11.005 7  2 Prog (0.2857143 0.7142857) *
     7) g2>=13.2 50 19 Prog (0.3800000 0.6200000)  
      14) g2>=17.91 25  9 No (0.6400000 0.3600000) *
      15) g2< 17.91 25  3 Prog (0.1200000 0.8800000) *
### Section 4

Classification tree:
rpart(formula = y ~ x, method = "class", control = temp3)

Variables actually used in tree construction:
 [1] x.1  x.11 x.12 x.16 x.18 x.19 x.2  x.21 x.3  x.4  x.5  x.6  x.7  x.8 

Root node error: 180/200 = 0.9

n= 200 

          CP nsplit rel error  xerror      xstd
1  0.1111111      0   1.00000 1.10000 0.0078174
2  0.1000000      1   0.88889 1.05000 0.0179118
3  0.0888889      2   0.78889 0.94444 0.0280542
4  0.0833333      3   0.70000 0.77778 0.0360041
5  0.0777778      5   0.53333 0.77778 0.0360041
6  0.0666667      6   0.45556 0.63333 0.0388968
7  0.0500000      7   0.38889 0.46667 0.0387776
8  0.0222222      8   0.33889 0.40000 0.0377124
9  0.0166667      9   0.31667 0.39444 0.0375956
10 0.0111111     10   0.30000 0.37222 0.0370831
11 0.0083333     15   0.24444 0.37778 0.0372181
12 0.0055556     22   0.18333 0.37778 0.0372181
13 0.0037037     31   0.13333 0.40000 0.0377124
14 0.0000000     34   0.12222 0.41111 0.0379327
### Section 5

Classification tree:
rpart(formula = progstat ~ age + eet + g2 + grade + gleason + 
    ploidy, data = stagec, method = "class")

Variables actually used in tree construction:
[1] g2    grade

Root node error: 54/146 = 0.36986

n= 146 

        CP nsplit rel error  xerror    xstd
1 0.117284      0   1.00000 1.00000 0.10802
2 0.027778      3   0.64815 0.87037 0.10454
3 0.010000      5   0.59259 0.85185 0.10395
Call:
rpart(formula = progstat ~ age + eet + g2 + grade + gleason + 
    ploidy, data = stagec, method = "class")
  n= 146 

          CP nsplit rel error    xerror      xstd
1 0.11728395      0 1.0000000 1.0000000 0.1080241
2 0.02777778      3 0.6481481 0.8703704 0.1045433
3 0.01000000      5 0.5925926 0.8518519 0.1039462

Node number 1: 146 observations,    complexity param=0.117284
  predicted class=No    expected loss=0.369863
    class counts:    92    54
   probabilities: 0.630 0.370 
  left son=2 (61 obs) right son=3 (85 obs)
  Primary splits:
      grade   < 2.5    to the left,  improve=10.357590, (0 missing)
      gleason < 5.5    to the left,  improve= 8.399574, (3 missing)
      ploidy  < 1.5    to the left,  improve= 7.656533, (0 missing)
      g2      < 13.2   to the left,  improve= 7.186766, (7 missing)
      age     < 58.5   to the right, improve= 1.388128, (0 missing)
  Surrogate splits:
      gleason < 5.5    to the left,  agree=0.863, adj=0.672, (0 split)
      ploidy  < 1.5    to the left,  agree=0.644, adj=0.148, (0 split)
      g2      < 9.945  to the left,  agree=0.630, adj=0.115, (0 split)
      age     < 66.5   to the right, agree=0.589, adj=0.016, (0 split)

Node number 2: 61 observations
  predicted class=No    expected loss=0.147541
    class counts:    52     9
   probabilities: 0.852 0.148 

Node number 3: 85 observations,    complexity param=0.117284
  predicted class=Prog  expected loss=0.4705882
    class counts:    40    45
   probabilities: 0.471 0.529 
  left son=6 (35 obs) right son=7 (50 obs)
  Primary splits:
      g2      < 13.2   to the left,  improve=2.1781360, (6 missing)
      ploidy  < 1.5    to the left,  improve=1.9834830, (0 missing)
      age     < 56.5   to the right, improve=1.6596080, (0 missing)
      gleason < 8.5    to the left,  improve=1.6386550, (0 missing)
      eet     < 1.5    to the right, improve=0.1086108, (1 missing)
  Surrogate splits:
      ploidy  < 1.5    to the left,  agree=0.924, adj=0.829, (6 split)
      age     < 68.5   to the right, agree=0.608, adj=0.114, (0 split)
      gleason < 6.5    to the left,  agree=0.582, adj=0.057, (0 split)

Node number 6: 35 observations
  predicted class=No    expected loss=0.4
    class counts:    21    14
   probabilities: 0.600 0.400 

Node number 7: 50 observations,    complexity param=0.117284
  predicted class=Prog  expected loss=0.38
    class counts:    19    31
   probabilities: 0.380 0.620 
  left son=14 (25 obs) right son=15 (25 obs)
  Primary splits:
      g2      < 17.91  to the right, improve=5.24148300, (6 missing)
      age     < 61.5   to the right, improve=1.12666700, (0 missing)
      gleason < 7.5    to the left,  improve=0.25269950, (0 missing)
      eet     < 1.5    to the right, improve=0.06310024, (1 missing)
  Surrogate splits:
      age     < 61.5   to the right, agree=0.614, adj=0.190, (6 split)
      eet     < 1.5    to the right, agree=0.591, adj=0.143, (0 split)
      grade   < 3.5    to the right, agree=0.545, adj=0.048, (0 split)
      gleason < 6.5    to the right, agree=0.545, adj=0.048, (0 split)

Node number 14: 25 observations
  predicted class=No    expected loss=0.36
    class counts:    16     9
   probabilities: 0.640 0.360 

Node number 15: 25 observations
  predicted class=Prog  expected loss=0.12
    class counts:     3    22
   probabilities: 0.120 0.880 

### Section 6
### Section 7

Regression tree:
rpart(formula = Price ~ ., data = cars)

Variables actually used in tree construction:
[1] Country Type    Weight 

Root node error: 983551497/60 = 16392525

n= 60 

        CP nsplit rel error  xerror    xstd
1 0.432114      0   1.00000 1.08415 0.22382
2 0.157616      1   0.56789 0.89295 0.17252
3 0.097521      2   0.41027 0.75347 0.17287
4 0.024107      3   0.31275 0.67654 0.15105
5 0.010000      4   0.28864 0.66649 0.14773
n= 60 

node), split, n, deviance, yval
      * denotes terminal node

1) root 60 983551500 12615.670  
  2) Weight< 2980 36 283686500 10442.580  
    4) Type=Small 13  21804710  7682.385 *
    5) Type=Compact,Medium,Sporty 23 106857900 12002.700 *
  3) Weight>=2980 24 274858800 15875.290 *
Call:
rpart(formula = Price ~ ., data = cars)
  n= 60 

          CP nsplit rel error    xerror      xstd
1 0.43211383      0 1.0000000 1.0841527 0.2238160
2 0.15761648      1 0.5678862 0.8929462 0.1725168
3 0.09752105      2 0.4102697 0.7534675 0.1728720
4 0.02410734      3 0.3127486 0.6765415 0.1510521
5 0.01000000      4 0.2886413 0.6664934 0.1477282

Node number 1: 60 observations,    complexity param=0.4321138
  mean=12615.67, MSE=1.639252e+07 
  left son=2 (36 obs) right son=3 (24 obs)
  Primary splits:
      Weight  < 2980   to the left,  improve=0.4321138, (0 missing)
      HP      < 104.5  to the left,  improve=0.4141712, (0 missing)
      Type    splits as  RRRLRR,     improve=0.4106497, (0 missing)
      Disp.   < 115    to the left,  improve=0.4083029, (0 missing)
      Mileage < 24.5   to the right, improve=0.3628025, (0 missing)
  Surrogate splits:
      Disp.   < 158    to the left,  agree=0.917, adj=0.792, (0 split)
      HP      < 132.5  to the left,  agree=0.867, adj=0.667, (0 split)
      Mileage < 22.5   to the right, agree=0.850, adj=0.625, (0 split)
      Type    splits as  LRRLLR,     agree=0.850, adj=0.625, (0 split)
      Country splits as  LLLLLLRR,   agree=0.650, adj=0.125, (0 split)

Node number 2: 36 observations,    complexity param=0.1576165
  mean=10442.58, MSE=7880181 
  left son=4 (13 obs) right son=5 (23 obs)
  Primary splits:
      Type    splits as  R-RLR-,     improve=0.5464621, (0 missing)
      Weight  < 2462.5 to the left,  improve=0.5308886, (0 missing)
      Disp.   < 115    to the left,  improve=0.4550460, (0 missing)
      Mileage < 31     to the right, improve=0.4382905, (0 missing)
      HP      < 105.5  to the left,  improve=0.4144004, (0 missing)
  Surrogate splits:
      Weight  < 2462.5 to the left,  agree=0.944, adj=0.846, (0 split)
      Disp.   < 115    to the left,  agree=0.917, adj=0.769, (0 split)
      HP      < 91     to the left,  agree=0.861, adj=0.615, (0 split)
      Mileage < 27.5   to the right, agree=0.833, adj=0.538, (0 split)
      Country splits as  RRRRLL-R,   agree=0.694, adj=0.154, (0 split)

Node number 3: 24 observations
  mean=15875.29, MSE=1.145245e+07 

Node number 4: 13 observations
  mean=7682.385, MSE=1677286 

Node number 5: 23 observations
  mean=12002.7, MSE=4645995 


Regression tree:
rpart(formula = pgstat ~ age + eet + g2 + grade + gleason + ploidy, 
    data = stagec)

Variables actually used in tree construction:
[1] g2      gleason grade  

Root node error: 34.027/146 = 0.23306

n= 146 

        CP nsplit rel error  xerror     xstd
1 0.152195      0   1.00000 1.01206 0.045309
2 0.064308      1   0.84781 0.91485 0.066783
3 0.029446      3   0.71919 0.91640 0.082375
4 0.019350      4   0.68974 0.93745 0.084810
5 0.017213      5   0.67039 0.97689 0.089218
6 0.010000      8   0.61875 0.97910 0.090020
n= 146 

node), split, n, deviance, yval
      * denotes terminal node

 1) root 146 34.027400 0.3698630  
   2) grade< 2.5 61  7.672131 0.1475410 *
   3) grade>=2.5 85 21.176470 0.5294118  
     6) g2< 13.2 35  8.400000 0.4000000 *
     7) g2>=13.2 50 11.780000 0.6200000  
      14) g2>=17.91 25  5.760000 0.3600000 *
      15) g2< 17.91 25  2.640000 0.8800000 *
### Section 8
Call:
rpart(formula = skips ~ Opening + Solder + Mask + PadType + Panel, 
    data = solder, method = "poisson", control = rpart.control(cp = 0.05, 
        maxcompete = 2))
  n= 720 

          CP nsplit rel error    xerror       xstd
1 0.36602468      0 1.0000000 1.0051342 0.06461212
2 0.14356853      1 0.6339753 0.6422530 0.03746887
3 0.07081271      2 0.4904068 0.4965263 0.02698739
4 0.05274593      3 0.4195941 0.4264514 0.02284248
5 0.05000000      4 0.3668481 0.4111188 0.02302237

Node number 1: 720 observations,    complexity param=0.3660247
  events=3575,  estimated rate=4.965278 , mean deviance=9.521792 
  left son=2 (480 obs) right son=3 (240 obs)
  Primary splits:
      Opening splits as  LLR,  improve=2509.3530, (0 missing)
      Mask    splits as  LLRR, improve=1323.3680, (0 missing)
      Solder  splits as  LR,   improve= 936.9548, (0 missing)

Node number 2: 480 observations
  events=918,  estimated rate=1.91378 , mean deviance=3.75659 

Node number 3: 240 observations,    complexity param=0.1435685
  events=2657,  estimated rate=11.06571 , mean deviance=10.59656 
  left son=6 (120 obs) right son=7 (120 obs)
  Primary splits:
      Mask    splits as  LLRR,       improve=984.2639, (0 missing)
      Solder  splits as  LR,         improve=631.5271, (0 missing)
      PadType splits as  RRRRLLRLRL, improve=244.9255, (0 missing)

Node number 6: 120 observations
  events=546,  estimated rate=4.550696 , mean deviance=4.970788 

Node number 7: 120 observations
  events=2111,  estimated rate=17.57051 , mean deviance=8.020159 

Loading required package: splines
n= 146 

node), split, n, deviance, yval
      * denotes terminal node

 1) root 146 195.411600 1.0000000  
   2) grade< 2.5 61  45.021520 0.3624701  
     4) g2< 11.36 33   9.120116 0.1225562 *
     5) g2>=11.36 28  27.804100 0.7335298  
      10) gleason< 5.5 20  14.376900 0.5292190 *
      11) gleason>=5.5 8  11.201470 1.3083680 *
   3) grade>=2.5 85 125.327400 1.6190620  
     6) age>=56.5 75 104.154700 1.4287310  
      12) gleason< 7.5 50  66.701410 1.1431320 *
      13) gleason>=7.5 25  33.993130 2.0355220  
        26) g2>=15.29 13  16.555970 1.3494740 *
        27) g2< 15.29 12  14.220260 2.9210480 *
     7) age< 56.5 10  15.522810 3.1977430 *
Call:
rpart(formula = Surv(stagec$pgtime, stagec$pgstat) ~ age + eet + 
    g2 + grade + gleason + ploidy, data = stagec)
  n= 146 

          CP nsplit rel error    xerror       xstd
1 0.12825561      0 1.0000000 1.0143020 0.07405392
2 0.04143718      1 0.8717444 0.8865059 0.07590486
3 0.02891302      2 0.8303072 0.8940595 0.08030319
4 0.01770700      3 0.8013942 0.9564897 0.08650164
5 0.01646215      4 0.7836872 0.9734598 0.08936699
6 0.01138994      5 0.7672250 1.0077870 0.09133677
7 0.01000000      6 0.7558351 1.0178375 0.09248707

Node number 1: 146 observations,    complexity param=0.1282556
  events=54,  estimated rate=1 , mean deviance=1.338436 
  left son=2 (61 obs) right son=3 (85 obs)
  Primary splits:
      grade   < 2.5    to the left,  improve=25.114360, (0 missing)
      gleason < 5.5    to the left,  improve=21.515590, (3 missing)
      ploidy  < 1.5    to the left,  improve=13.874260, (0 missing)
      g2      < 13.2   to the left,  improve=12.370770, (7 missing)
      age     < 58.5   to the right, improve= 2.659133, (0 missing)
  Surrogate splits:
      gleason < 5.5    to the left,  agree=0.863, adj=0.672, (0 split)
      ploidy  < 1.5    to the left,  agree=0.644, adj=0.148, (0 split)
      g2      < 9.945  to the left,  agree=0.630, adj=0.115, (0 split)
      age     < 66.5   to the right, agree=0.589, adj=0.016, (0 split)

Node number 2: 61 observations,    complexity param=0.04143718
  events=9,  estimated rate=0.3624701 , mean deviance=0.7380577 
  left son=4 (33 obs) right son=5 (28 obs)
  Primary splits:
      g2      < 11.36  to the left,  improve=8.9819660, (1 missing)
      ploidy  < 1.5    to the left,  improve=6.8795730, (0 missing)
      age     < 68.5   to the right, improve=4.1362190, (0 missing)
      gleason < 5.5    to the left,  improve=1.6564990, (3 missing)
      eet     < 1.5    to the left,  improve=0.5950964, (1 missing)
  Surrogate splits:
      ploidy < 1.5    to the left,  agree=0.917, adj=0.815, (1 split)
      age    < 65.5   to the left,  agree=0.617, adj=0.148, (0 split)

Node number 3: 85 observations,    complexity param=0.02891302
  events=45,  estimated rate=1.619062 , mean deviance=1.47444 
  left son=6 (75 obs) right son=7 (10 obs)
  Primary splits:
      age     < 56.5   to the right, improve=6.3899780, (0 missing)
      g2      < 22.765 to the right, improve=4.7850160, (6 missing)
      gleason < 8.5    to the left,  improve=4.3730790, (0 missing)
      ploidy  < 1.5    to the left,  improve=1.5650740, (0 missing)
      eet     < 1.5    to the right, improve=0.8319287, (1 missing)

Node number 4: 33 observations
  events=1,  estimated rate=0.1225562 , mean deviance=0.2763672 

Node number 5: 28 observations
  events=8,  estimated rate=0.7335298 , mean deviance=0.9930034 

Node number 6: 75 observations
  events=37,  estimated rate=1.428731 , mean deviance=1.388729 

Node number 7: 10 observations
  events=8,  estimated rate=3.197743 , mean deviance=1.552281 

### Section 9
### Section 10
Warning message:
package 'survival' was built under R version 2.12.1 
> 
> if(!interactive()) {
+     dev.off()         # finish postscript plot
+     q(runLast=FALSE)  # needed else R prints the time on exit (R2.5 and higher) which messes up the diffs
+ }
